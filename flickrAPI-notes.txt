Search:
https://www.flickr.com/services/api/explore/flickr.photos.search
	argument: .skCPTpTVr.Q3WKW
	argument: bbox (Optional)
		A comma-delimited list of 4 values defining the Bounding Box of the area that will be searched.
		The 4 values represent the bottom-left corner of the box and the top-right corner, minimum_longitude, minimum_latitude, maximum_longitude, maximum_latitude.
		Longitude has a range of -180 to 180 , latitude of -90 to 90. Defaults to -180, -90, 180, 90 if not specified.
		Unlike standard photo queries, geo (or bounding box) queries will only return 250 results per page.
	argument:

result: user IDs, photo ID's. Both will be paired together.

Interesting
https://www.flickr.com/services/api/flickr.interestingness.getList.htm
	argument: user ID
	per page: 500
Loop through owners (user id's) and see if any match with interesting user id's

Get Photo Geo location
https://www.flickr.com/services/api/flickr.photos.geo.getLocation.html
required: use photo ID from first search if match through interesting user ID found.
	result:
		Lat -
		Long -
Generate arrays of lats and longs and add into JS function in base page.

----------------------------------------------------------------------------
Photos

You can construct the source URL to a photo once you know its ID, server ID, farm ID and secret, as returned by many API methods.

FORM

https://farm{farm-id}.staticflickr.com/{server-id}/{id}_{secret}.jpg
	or
https://farm{farm-id}.staticflickr.com/{server-id}/{id}_{secret}_[mstzb].jpg
	or
https://farm{farm-id}.staticflickr.com/{server-id}/{id}_{o-secret}_o.(jpg|gif|png


---------------------------------------------------------------------------------
https://www.flickr.com/services/api/explore/flickr.photos.getSizes
from flickr.photos.getSizes, you can get the static jpeg image
